//11/05/2023
import java.nio.file.Paths;
import java.util.*;
import java.io.*;
public class Main{
    static ArrayList<String> Attributes = new ArrayList<>();            //Guarda os atributos 
    static ArrayList<String[]> Examples = new ArrayList<>();            //Guarda os exemplos 
    static int Example_size;                                            //Tamanho de cada exemplo
    static Set<String> Classes = new HashSet<>();                       //Classes diferentes que existem no DataSet

    public static void Read_csv(String name) throws Exception{
        File file1 = new File(name);
        Scanner sc = new Scanner(file1);

        //Leitura e armazenamento de Atributos        
        String[] aux = sc.nextLine().split(",");

        for (String attribute : aux)
            Attributes.add(attribute);
        
        System.out.println("Atributos :" + Attributes );

        //Leitura e armazenamento de Exemplos
        Example_size = Attributes.size();

        sc.useDelimiter(",");

        while(sc.hasNextLine()){
            String[] temp = sc.nextLine().split(",");
            Examples.add(temp);
        }
        sc.close();
        
        //! NAO ESTAMOS A TER EM CONTA O ID (primeira coluna do csv)!!!!
        int i = 1;
        for (String[] example : Examples){
            System.out.println("Exemplo " + i + ": " + Arrays.toString(example));
            i++;
        } 
    }
    
    public static void get_Classes(){    //Coloca na variavel o lobal todas as classes diferentes
        for (String[] example : Examples)
            Classes.add(example[example.length-1]) ;
    }

    public static int getPos_col(String attribute){     //retorna o indice que corresponde a um dado atributo  (coluna)
        for (int i = 0 ; i < Examples.size(); i++){
            if (Attributes.get(i).equals(attribute))
                return i;
        }
        System.out.println("Atributo nao existe ou nome de atributo errado");
        return -1;

    }
    
    //ID3   (Tabela contem exemplos , atributos e target attribute)
    public static ROOTNode ID3(Tabela t){
        ROOTNode root = new ROOTNode();

        /*verifica se os exemplos presentes na tabela sao
        todos  da mesma classe*/
        if (t.Same_class()) {
            System.out.println("Temos uma tabela onde todos pertencem ao mesmo no");
            // for (String[] e : t.examples)
                // System.out.println(Arrays.toString(e));
            int pos = t.examples.get(0).length-1;
            root = new ROOTNode(t.examples.get(0)[pos]);
            return root;
        }
        /*Caso nao existam mais atributos */
        if (t.attributes.size() == 2){
            System.out.println("class mais comum : " + t.Most_Common_Class());
            root = new ROOTNode(t.Most_Common_Class());

        }
        else{
            //Calcular a entropia de todos os atributos em t.atributes 
            // e escolher aquele que tem menor entropia

            //!DUVIDA , PARA ESCOLHER O ATRIBUTO 
            // QUE MELHOR CLASSIFICA EU LEMTRO-ME DA PROFESSORA DIZER PARA
            // ESCOLHER LOCALMENTE (PEDIR PARA EXPLICAR PARA UM EXEMPLO)

        }
        return root; 
    }
    

    public static void main(String[] args) throws Exception{
        Read_csv(args[0]);
        
        get_Classes();

        // Map <String ,Integer> Target_attribute= new HashMap<>();  // class -> frequencia
        // for (String[] e : Examples){
        //     String temp = e[Example_size-1];
        //     if (Target_attribute.get(temp) == null)
        //         Target_attribute.put (temp,1);
        //     else
        //         Target_attribute.put(temp, Target_attribute.get(temp) + 1);
        // }
        // System.out.println(Target_attribute);
        //Tabela inicial (so precissamos desta tabela inicial)
        Tabela t = new Tabela(Example_size-1,Examples,Attributes);
        for (Coluna  c : t.colunas){
            if (c != null)
                c.Pretty_Print();
        }
        //Implementar o id3 aqui
        ID3(t);

    }
}